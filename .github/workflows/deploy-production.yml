name: Deploy to Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy (leave empty for latest release)'
        required: false
        type: string

jobs:
  deploy-production:
    name: Deploy to Production (Netlify)
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.deploy-url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || inputs.tag || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Get release information
        id: release-info
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
            echo "name=${{ github.event.release.name }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ inputs.tag }}" ]; then
            echo "tag=${{ inputs.tag }}" >> $GITHUB_OUTPUT
            echo "name=Manual Deploy - ${{ inputs.tag }}" >> $GITHUB_OUTPUT
          else
            TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "latest")
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "name=Manual Deploy - $TAG" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Run tests
        run: npm test
        continue-on-error: false
        env:
          NODE_ENV: test

      - name: Deploy to Netlify Production
        id: deploy
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: '.'
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: '🚀 Production Deploy - ${{ steps.release-info.outputs.name }} (${{ steps.release-info.outputs.tag }})'
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: false
          functions-dir: 'src/api'
          github-deployment-environment: 'production'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 15

      - name: Create deployment summary
        run: |
          echo "## 🚀 Production Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Release:** ${{ steps.release-info.outputs.name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** \`${{ steps.release-info.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Deploy URL:** ${{ steps.deploy.outputs.deploy-url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Netlify Logs:** ${{ steps.deploy.outputs.logs-url }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Environment Variables" >> $GITHUB_STEP_SUMMARY
          echo "- NODE_ENV: production" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Verify the deployment at the URL above" >> $GITHUB_STEP_SUMMARY
          echo "2. Test critical user flows" >> $GITHUB_STEP_SUMMARY
          echo "3. Monitor logs for any errors" >> $GITHUB_STEP_SUMMARY

      - name: Notify on failure
        if: failure()
        run: |
          echo "## ❌ Production Deployment Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Release:** ${{ steps.release-info.outputs.name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** \`${{ steps.release-info.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please check the logs above for details." >> $GITHUB_STEP_SUMMARY
